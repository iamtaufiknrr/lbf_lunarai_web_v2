{
  "mcpServers": {
    "database": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-postgres"
      ],
      "env": {
        "DATABASE_URL": "${DATABASE_URL}"
      },
      "description": "PostgreSQL MCP server for ingredient database, supplier pricing, and formulation data access",
      "capabilities": [
        "query_ingredients",
        "query_suppliers",
        "query_pricing",
        "store_results",
        "audit_logging"
      ]
    },
    "web-search": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-tavily"
      ],
      "env": {
        "TAVILY_API_KEY": "${TAVILY_API_KEY}"
      },
      "description": "Tavily web search for market research, competitor analysis, and regulatory updates",
      "capabilities": [
        "web_search",
        "competitor_research",
        "market_trends",
        "regulatory_updates"
      ]
    },
    "filesystem": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/app/data"
      ],
      "description": "Filesystem access for templates, brand guidelines, and generated assets",
      "capabilities": [
        "read_templates",
        "write_reports",
        "access_guidelines",
        "store_assets"
      ]
    },
    "github": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-github"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_TOKEN}"
      },
      "description": "GitHub integration for version control of formulations and documentation",
      "capabilities": [
        "store_formulations",
        "version_control",
        "collaboration"
      ],
      "optional": true
    }
  },
  "tools": {
    "query_ingredient_prices": {
      "server": "database",
      "description": "Query current ingredient prices from supplier database",
      "parameters": {
        "ingredient_names": {
          "type": "array",
          "description": "List of ingredient names to query"
        },
        "supplier_preference": {
          "type": "string",
          "description": "Preferred supplier code (optional)"
        }
      }
    },
    "search_market_data": {
      "server": "web-search",
      "description": "Search for market trends and competitor information",
      "parameters": {
        "query": {
          "type": "string",
          "description": "Search query"
        },
        "search_depth": {
          "type": "string",
          "enum": ["basic", "advanced"],
          "default": "advanced"
        },
        "max_results": {
          "type": "integer",
          "default": 10
        }
      }
    },
    "calculate_formulation_cost": {
      "server": "database",
      "description": "Calculate total cost for a formulation including waste factor",
      "parameters": {
        "ingredients": {
          "type": "array",
          "description": "List of ingredients with percentages"
        },
        "packaging_type": {
          "type": "string",
          "description": "Type of packaging"
        },
        "batch_size": {
          "type": "integer",
          "description": "Batch size in units"
        }
      }
    },
    "store_report_section": {
      "server": "database",
      "description": "Store a completed report section",
      "parameters": {
        "submission_id": {
          "type": "string",
          "description": "Submission UUID"
        },
        "section_type": {
          "type": "string",
          "description": "Type of report section"
        },
        "content": {
          "type": "object",
          "description": "Section content as JSON"
        }
      }
    }
  },
  "prompts": {
    "formulation_analysis": {
      "description": "Analyze ingredients and generate formulation recommendations",
      "template": "You are an expert cosmetic formulation scientist...",
      "variables": ["formType", "functions", "ingredients", "targetPrice"]
    },
    "market_research": {
      "description": "Analyze market data and provide insights",
      "template": "Analyze the following market data...",
      "variables": ["productType", "targetMarket", "searchResults"]
    },
    "copywriting": {
      "description": "Generate creative marketing content",
      "template": "You are a creative copywriter...",
      "variables": ["brandName", "brandVoice", "productType", "keyBenefits"]
    },
    "compliance_check": {
      "description": "Analyze regulatory compliance requirements",
      "template": "Analyze regulatory compliance for this cosmetic product...",
      "variables": ["ingredients", "claims", "targetMarkets", "certifications"]
    },
    "pricing_strategy": {
      "description": "Calculate costs and recommend pricing",
      "template": "Calculate manufacturing costs and pricing strategy...",
      "variables": ["ingredients", "packagingType", "batchSize", "targetMargin"]
    }
  },
  "resources": {
    "ingredient_database": {
      "uri": "postgres://ingredients_master",
      "description": "Master database of cosmetic ingredients",
      "mimeType": "application/json"
    },
    "supplier_pricing": {
      "uri": "postgres://supplier_ingredients",
      "description": "Current supplier pricing data",
      "mimeType": "application/json"
    },
    "formulation_templates": {
      "uri": "file:///app/data/templates/formulations",
      "description": "Pre-built formulation templates",
      "mimeType": "application/json"
    },
    "brand_guidelines": {
      "uri": "file:///app/data/guidelines",
      "description": "Brand voice and style guidelines",
      "mimeType": "text/markdown"
    }
  },
  "security": {
    "authentication": {
      "type": "api_key",
      "header": "X-MCP-API-Key"
    },
    "rate_limiting": {
      "requests_per_minute": 60,
      "requests_per_hour": 1000
    },
    "encryption": {
      "in_transit": true,
      "at_rest": true
    }
  },
  "monitoring": {
    "logging": {
      "level": "info",
      "destination": "postgres://audit_logs"
    },
    "metrics": {
      "enabled": true,
      "endpoint": "/metrics"
    },
    "tracing": {
      "enabled": true,
      "sample_rate": 0.1
    }
  }
}
