{
  "name": "LunarAI - Main Orchestrator",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "lbf_skincare",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "lbf-skincare-main"
    },
    {
      "parameters": {
        "jsCode": "const secret = $input.first().headers['x-webhook-secret'];\nif (secret !== $env.N8N_WEBHOOK_SECRET) {\n  throw new Error('Unauthorized');\n}\nreturn { json: $input.first().json };"
      },
      "id": "auth-validate",
      "name": "Validate Authentication",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "jsCode": "const payload = $input.first().json;\nconst submissionId = payload.submissionId;\nconst context = {\n  submissionId,\n  brand: payload.brand,\n  product: payload.productBlueprint,\n  ingredients: payload.ingredients,\n  target: payload.target\n};\nreturn { json: { submissionId, context, payload } };"
      },
      "id": "extract-payload",
      "name": "Extract Payload",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO submissions (id, brand_name, status) VALUES ($1, $2, 'processing') RETURNING *",
        "options": {
          "queryParameters": "={{JSON.stringify([$json.submissionId, $json.context.brand.name])}}"
        }
      },
      "id": "db-create-submission",
      "name": "DB - Create Submission",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [850, 300],
      "credentials": {
        "postgres": {
          "id": "postgres-main",
          "name": "LunarAI Database"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO submission_payloads (submission_id, payload) VALUES ($1, $2)",
        "options": {
          "queryParameters": "={{JSON.stringify([$json.submissionId, JSON.stringify($json.payload)])}}"
        }
      },
      "id": "db-store-payload",
      "name": "DB - Store Payload",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [1050, 300]
    },
    {
      "parameters": {},
      "id": "split-parallel",
      "name": "Split to Parallel Groups",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [1250, 300]
    },
    {
      "parameters": {
        "url": "={{$env.SECTION_1_WEBHOOK}}",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "submissionId", "value": "={{$json.submissionId}}"},
            {"name": "context", "value": "={{JSON.stringify($json.context)}}"}
          ]
        }
      },
      "id": "call-section-1",
      "name": "Section 1 - Product Header",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1450, 100]
    },
    {
      "parameters": {
        "url": "={{$env.SECTION_2_WEBHOOK}}",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "submissionId", "value": "={{$json.submissionId}}"},
            {"name": "context", "value": "={{JSON.stringify($json.context)}}"}
          ]
        }
      },
      "id": "call-section-2",
      "name": "Section 2 - Description",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1450, 200]
    },
    {
      "parameters": {
        "url": "={{$env.SECTION_3_WEBHOOK}}",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "submissionId", "value": "={{$json.submissionId}}"},
            {"name": "context", "value": "={{JSON.stringify($json.context)}}"}
          ]
        }
      },
      "id": "call-section-3",
      "name": "Section 3 - Alt Names",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1450, 300]
    },
    {
      "parameters": {
        "url": "={{$env.SECTION_4_WEBHOOK}}",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "submissionId", "value": "={{$json.submissionId}}"},
            {"name": "context", "value": "={{JSON.stringify($json.context)}}"}
          ]
        }
      },
      "id": "call-section-4",
      "name": "Section 4 - Ingredients",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1450, 400]
    },
    {
      "parameters": {
        "url": "={{$env.SECTION_5_WEBHOOK}}",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "submissionId", "value": "={{$json.submissionId}}"},
            {"name": "context", "value": "={{JSON.stringify($json.context)}}"}
          ]
        }
      },
      "id": "call-section-5",
      "name": "Section 5 - Market",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1450, 500]
    },
    {
      "parameters": {
        "url": "={{$env.SECTION_6_WEBHOOK}}",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "submissionId", "value": "={{$json.submissionId}}"},
            {"name": "context", "value": "={{JSON.stringify($json.context)}}"}
          ]
        }
      },
      "id": "call-section-6",
      "name": "Section 6 - Copy",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1450, 600]
    },
    {
      "parameters": {
        "url": "={{$env.SECTION_7_WEBHOOK}}",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "submissionId", "value": "={{$json.submissionId}}"},
            {"name": "context", "value": "={{JSON.stringify($json.context)}}"}
          ]
        }
      },
      "id": "call-section-7",
      "name": "Section 7 - Pricing",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1450, 700]
    },
    {
      "parameters": {
        "url": "={{$env.SECTION_8_WEBHOOK}}",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "submissionId", "value": "={{$json.submissionId}}"},
            {"name": "context", "value": "={{JSON.stringify($json.context)}}"}
          ]
        }
      },
      "id": "call-section-8",
      "name": "Section 8 - Compliance",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1450, 800]
    },
    {
      "parameters": {
        "mode": "mergeByPosition"
      },
      "id": "merge-parallel",
      "name": "Merge Parallel Results",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [1650, 450]
    },
    {
      "parameters": {
        "url": "={{$env.SECTION_9_WEBHOOK}}",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "submissionId", "value": "={{$json.submissionId}}"},
            {"name": "context", "value": "={{JSON.stringify($json.context)}}"}
          ]
        }
      },
      "id": "call-section-9",
      "name": "Section 9 - Timeline",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1850, 400]
    },
    {
      "parameters": {
        "url": "={{$env.SECTION_10_WEBHOOK}}",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "submissionId", "value": "={{$json.submissionId}}"},
            {"name": "context", "value": "={{JSON.stringify($json.context)}}"}
          ]
        }
      },
      "id": "call-section-10",
      "name": "Section 10 - Sustainability",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1850, 500]
    },
    {
      "parameters": {
        "url": "={{$env.SECTION_11_WEBHOOK}}",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "submissionId", "value": "={{$json.submissionId}}"},
            {"name": "context", "value": "={{JSON.stringify($json.context)}}"}
          ]
        }
      },
      "id": "call-section-11",
      "name": "Section 11 - Next Steps",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [2050, 450]
    },
    {
      "parameters": {
        "jsCode": "const sections = {};\nconst items = $input.all();\nfor (const item of items) {\n  if (item.json.sectionType) {\n    sections[item.json.sectionType] = item.json.content;\n  }\n}\nreturn { json: { submissionId: $json.submissionId, sections } };"
      },
      "id": "aggregate-results",
      "name": "Aggregate Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [2250, 450]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE submissions SET status = 'completed' WHERE id = $1",
        "options": {
          "queryParameters": "={{JSON.stringify([$json.submissionId])}}"
        }
      },
      "id": "db-update-status",
      "name": "DB - Update Status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [2450, 450]
    },
    {
      "parameters": {
        "url": "={{$env.NEXT_PUBLIC_APP_URL}}/api/sync",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "submissionId", "value": "={{$json.submissionId}}"},
            {"name": "status", "value": "completed"},
            {"name": "sections", "value": "={{JSON.stringify($json.sections)}}"}
          ]
        }
      },
      "id": "callback-app",
      "name": "Callback to App",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [2650, 450]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{JSON.stringify({ success: true, submissionId: $json.submissionId })}}"
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2850, 450]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [[{"node": "Validate Authentication", "type": "main", "index": 0}]]
    },
    "Validate Authentication": {
      "main": [[{"node": "Extract Payload", "type": "main", "index": 0}]]
    },
    "Extract Payload": {
      "main": [[{"node": "DB - Create Submission", "type": "main", "index": 0}]]
    },
    "DB - Create Submission": {
      "main": [[{"node": "DB - Store Payload", "type": "main", "index": 0}]]
    },
    "DB - Store Payload": {
      "main": [[{"node": "Split to Parallel Groups", "type": "main", "index": 0}]]
    },
    "Split to Parallel Groups": {
      "main": [[
        {"node": "Section 1 - Product Header", "type": "main", "index": 0},
        {"node": "Section 2 - Description", "type": "main", "index": 0},
        {"node": "Section 3 - Alt Names", "type": "main", "index": 0},
        {"node": "Section 4 - Ingredients", "type": "main", "index": 0},
        {"node": "Section 5 - Market", "type": "main", "index": 0},
        {"node": "Section 6 - Copy", "type": "main", "index": 0},
        {"node": "Section 7 - Pricing", "type": "main", "index": 0},
        {"node": "Section 8 - Compliance", "type": "main", "index": 0}
      ]]
    },
    "Section 1 - Product Header": {
      "main": [[{"node": "Merge Parallel Results", "type": "main", "index": 0}]]
    },
    "Section 2 - Description": {
      "main": [[{"node": "Merge Parallel Results", "type": "main", "index": 0}]]
    },
    "Section 3 - Alt Names": {
      "main": [[{"node": "Merge Parallel Results", "type": "main", "index": 0}]]
    },
    "Section 4 - Ingredients": {
      "main": [[{"node": "Merge Parallel Results", "type": "main", "index": 0}]]
    },
    "Section 5 - Market": {
      "main": [[{"node": "Merge Parallel Results", "type": "main", "index": 0}]]
    },
    "Section 6 - Copy": {
      "main": [[{"node": "Merge Parallel Results", "type": "main", "index": 0}]]
    },
    "Section 7 - Pricing": {
      "main": [[{"node": "Merge Parallel Results", "type": "main", "index": 0}]]
    },
    "Section 8 - Compliance": {
      "main": [[{"node": "Merge Parallel Results", "type": "main", "index": 0}]]
    },
    "Merge Parallel Results": {
      "main": [[
        {"node": "Section 9 - Timeline", "type": "main", "index": 0},
        {"node": "Section 10 - Sustainability", "type": "main", "index": 0}
      ]]
    },
    "Section 9 - Timeline": {
      "main": [[{"node": "Section 11 - Next Steps", "type": "main", "index": 0}]]
    },
    "Section 10 - Sustainability": {
      "main": [[{"node": "Section 11 - Next Steps", "type": "main", "index": 0}]]
    },
    "Section 11 - Next Steps": {
      "main": [[{"node": "Aggregate Results", "type": "main", "index": 0}]]
    },
    "Aggregate Results": {
      "main": [[{"node": "DB - Update Status", "type": "main", "index": 0}]]
    },
    "DB - Update Status": {
      "main": [[{"node": "Callback to App", "type": "main", "index": 0}]]
    },
    "Callback to App": {
      "main": [[{"node": "Webhook Response", "type": "main", "index": 0}]]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-10-18T16:00:00.000Z",
  "versionId": "1.0.0"
}
